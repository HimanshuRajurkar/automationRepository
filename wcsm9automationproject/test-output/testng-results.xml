<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[onStart]]>
    </line>
    <line>
      <![CDATA[onTestStart]]>
    </line>
    <line>
      <![CDATA[onTestFailure]]>
    </line>
    <line>
      <![CDATA[Method Failed Screenshot taken:validLoginMethod]]>
    </line>
  </reporter-output>
  <suite started-at="2023-12-06T12:34:16 IST" name="Default suite" finished-at="2023-12-06T12:34:21 IST" duration-ms="5114">
    <groups>
    </groups>
    <test started-at="2023-12-06T12:34:16 IST" name="Default test" finished-at="2023-12-06T12:34:21 IST" duration-ms="5114">
      <class name="listenersPackage.ValidLogin">
        <test-method is-config="true" signature="setUp()[pri:0, instance:listenersPackage.ValidLogin@223d2c72]" started-at="2023-12-06T12:34:16 IST" name="setUp" finished-at="2023-12-06T12:34:20 IST" duration-ms="4699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLoginMethod()[pri:0, instance:listenersPackage.ValidLogin@223d2c72]" started-at="2023-12-06T12:34:20 IST" name="validLoginMethod" finished-at="2023-12-06T12:34:21 IST" duration-ms="66" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME -] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME -] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at listenersPackage.ValidLogin.validLoginMethod(ValidLogin.java:17)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[onTestStart]]>
            </line>
            <line>
              <![CDATA[onTestFailure]]>
            </line>
            <line>
              <![CDATA[Method Failed Screenshot taken:validLoginMethod]]>
            </line>
          </reporter-output>
        </test-method> <!-- validLoginMethod -->
      </class> <!-- listenersPackage.ValidLogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
